file:
- unparsable:
  - word: CREATE
  - word: FUNCTION
  - word: dbo
  - dot: .
  - word: ISOweek
  - start_bracket: (
  - tsql_variable: '@DATE'
  - word: datetime
  - end_bracket: )
  - word: RETURNS
  - word: int
  - word: WITH
  - word: EXECUTE
  - word: AS
  - word: CALLER
  - word: AS
  - word: BEGIN
  - word: DECLARE
  - tsql_variable: '@ISOweek'
  - word: int
  - semicolon: ;
  - word: SET
  - tsql_variable: '@ISOweek'
  - raw_comparison_operator: =
  - word: DATEPART
  - start_bracket: (
  - word: wk
  - comma: ','
  - tsql_variable: '@DATE'
  - end_bracket: )
  - plus: +
  - numeric_literal: '1'
  - minus: '-'
  - word: DATEPART
  - start_bracket: (
  - word: wk
  - comma: ','
  - word: CAST
  - start_bracket: (
  - word: DATEPART
  - start_bracket: (
  - word: yy
  - comma: ','
  - tsql_variable: '@DATE'
  - end_bracket: )
  - word: as
  - word: CHAR
  - start_bracket: (
  - numeric_literal: '4'
  - end_bracket: )
  - end_bracket: )
  - plus: +
  - single_quote: '''0104'''
  - end_bracket: )
  - semicolon: ;
  - word: IF
  - start_bracket: (
  - tsql_variable: '@ISOweek'
  - raw_comparison_operator: =
  - numeric_literal: '0'
  - end_bracket: )
  - word: SET
  - tsql_variable: '@ISOweek'
  - raw_comparison_operator: =
  - word: dbo
  - dot: .
  - word: ISOweek
  - start_bracket: (
  - word: CAST
  - start_bracket: (
  - word: DATEPART
  - start_bracket: (
  - word: yy
  - comma: ','
  - tsql_variable: '@DATE'
  - end_bracket: )
  - minus: '-'
  - numeric_literal: '1'
  - word: AS
  - word: CHAR
  - start_bracket: (
  - numeric_literal: '4'
  - end_bracket: )
  - end_bracket: )
  - plus: +
  - single_quote: '''12'''
  - plus: +
  - word: CAST
  - start_bracket: (
  - numeric_literal: '24'
  - plus: +
  - word: DATEPART
  - start_bracket: (
  - word: DAY
  - comma: ','
  - tsql_variable: '@DATE'
  - end_bracket: )
  - word: AS
  - word: CHAR
  - start_bracket: (
  - numeric_literal: '2'
  - end_bracket: )
  - end_bracket: )
  - end_bracket: )
  - plus: +
  - numeric_literal: '1'
  - semicolon: ;
  - word: IF
  - start_bracket: (
  - start_bracket: (
  - word: DATEPART
  - start_bracket: (
  - word: mm
  - comma: ','
  - tsql_variable: '@DATE'
  - end_bracket: )
  - raw_comparison_operator: =
  - numeric_literal: '12'
  - end_bracket: )
  - word: AND
  - start_bracket: (
  - start_bracket: (
  - word: DATEPART
  - start_bracket: (
  - word: dd
  - comma: ','
  - tsql_variable: '@DATE'
  - end_bracket: )
  - minus: '-'
  - word: DATEPART
  - start_bracket: (
  - word: dw
  - comma: ','
  - tsql_variable: '@DATE'
  - end_bracket: )
  - end_bracket: )
  - raw_comparison_operator: '>'
  - raw_comparison_operator: =
  - numeric_literal: '28'
  - end_bracket: )
  - end_bracket: )
  - word: SET
  - tsql_variable: '@ISOweek'
  - raw_comparison_operator: =
  - numeric_literal: '1'
  - semicolon: ;
  - word: RETURN
  - start_bracket: (
  - tsql_variable: '@ISOweek'
  - end_bracket: )
  - semicolon: ;
  - word: END
  - semicolon: ;
  - word: GO
  - word: CREATE
  - word: FUNCTION
  - word: f
  - start_bracket: (
  - end_bracket: )
  - word: RETURNS
  - tsql_variable: '@t'
  - word: TABLE
  - start_bracket: (
  - word: i
  - word: int
  - end_bracket: )
  - word: AS
  - word: BEGIN
  - word: INSERT
  - word: INTO
  - tsql_variable: '@t'
  - word: SELECT
  - numeric_literal: '1'
  - semicolon: ;
  - word: RETURN
  - semicolon: ;
  - word: END
  - semicolon: ;
  - word: GO
  - word: CREATE
  - word: OR
  - word: ALTER
  - word: FUNCTION
  - word: F
  - start_bracket: (
  - tsql_variable: '@DATE'
  - word: as
  - word: datetime
  - end_bracket: )
  - word: RETURNS
  - word: INT
  - word: AS
  - word: BEGIN
  - word: RETURN
  - numeric_literal: '1'
  - word: END
  - semicolon: ;
  - word: GO
  - word: ALTER
  - word: FUNCTION
  - word: F
  - start_bracket: (
  - tsql_variable: '@DATE'
  - word: as
  - word: datetime
  - end_bracket: )
  - word: RETURNS
  - word: INT
  - word: AS
  - word: BEGIN
  - word: RETURN
  - numeric_literal: '0'
  - word: END
  - semicolon: ;
  - word: GO
  - word: CREATE
  - word: FUNCTION
  - double_quote: '[UTIL]'
  - dot: .
  - double_quote: '[getItemList]'
  - start_bracket: (
  - tsql_variable: '@list'
  - word: ItemList
  - word: READONLY
  - end_bracket: )
  - word: RETURNS
  - word: nvarchar
  - start_bracket: (
  - word: max
  - end_bracket: )
  - word: AS
  - word: BEGIN
  - word: DECLARE
  - tsql_variable: '@str'
  - word: nvarchar
  - start_bracket: (
  - word: max
  - end_bracket: )
  - raw_comparison_operator: =
  - single_quote: ''''''
  - word: SELECT
  - tsql_variable: '@str'
  - raw_comparison_operator: =
  - tsql_variable: '@str'
  - plus: +
  - double_quote: '[item]'
  - word: FROM
  - start_bracket: (
  - word: SELECT
  - word: TOP
  - start_bracket: (
  - numeric_literal: '9999'
  - end_bracket: )
  - double_quote: '[item]'
  - word: FROM
  - tsql_variable: '@list'
  - word: ORDER
  - word: BY
  - double_quote: '[order]'
  - end_bracket: )
  - word: i
  - word: RETURN
  - tsql_variable: '@str'
  - word: END
  - semicolon: ;
  - word: GO
  - word: create
  - word: function
  - word: my_function
  - start_bracket: (
  - tsql_variable: '@my_parameter'
  - word: int
  - end_bracket: )
  - word: returns
  - word: int
  - word: with
  - word: schemabinding
  - comma: ','
  - word: returns
  - word: 'null'
  - word: on
  - word: 'null'
  - word: input
  - word: begin
  - word: return
  - tsql_variable: '@my_parameter'
  - word: end
  - word: go
