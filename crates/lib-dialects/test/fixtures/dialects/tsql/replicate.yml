file:
- statement:
  - statement:
    - select_statement:
      - select_clause:
        - keyword: SELECT
        - select_clause_element:
          - column_reference:
            - naked_identifier: REPLICATE
        - unparsable:
          - start_bracket: (
          - single_quote: '''0'''
          - comma: ','
          - numeric_literal: '3'
          - minus: '-'
          - word: DATALENGTH
          - start_bracket: (
          - word: c1
          - end_bracket: )
          - end_bracket: )
          - plus: +
          - word: c1
          - word: AS
          - single_quote: '''Varchar Column'''
          - comma: ','
          - word: REPLICATE
          - start_bracket: (
          - single_quote: '''0'''
          - comma: ','
          - numeric_literal: '3'
          - minus: '-'
          - word: DATALENGTH
          - start_bracket: (
          - word: c2
          - end_bracket: )
          - end_bracket: )
          - plus: +
          - word: c2
          - word: AS
          - single_quote: '''Char Column'''
      - from_clause:
        - keyword: FROM
        - from_expression:
          - from_expression_element:
            - from_expression_element:
              - table_expression:
                - table_reference:
                  - object_reference:
                    - naked_identifier: t1
  - statement_terminator: ;
  - statement:
    - keyword: DECLARE
    - tsql_variable: '@BinVar'
    - data_type:
      - data_type_identifier: varbinary
      - bracketed_arguments:
        - bracketed:
          - start_bracket: (
          - numeric_literal: '128'
          - end_bracket: )
  - statement_terminator: ;
  - statement:
    - keyword: SET
    - tsql_variable: '@BinVar'
    - assignment_operator:
      - raw_comparison_operator: =
    - expression:
      - column_reference:
        - naked_identifier: CAST
- unparsable:
  - start_bracket: (
  - word: REPLICATE
  - start_bracket: (
  - numeric_literal: '0x20'
  - comma: ','
  - numeric_literal: '128'
  - end_bracket: )
  - word: AS
  - word: varbinary
  - start_bracket: (
  - numeric_literal: '128'
  - end_bracket: )
  - end_bracket: )
  - semicolon: ;
