# YML test file for T-SQL MERGE statements

merge_into_optional:
  # Test that INTO is optional in T-SQL MERGE statements
  pass_str: |
    MERGE target_table AS t
    USING source_table AS s
    ON t.id = s.id
    WHEN MATCHED THEN UPDATE SET t.name = s.name;

merge_with_into:
  # Test standard ANSI syntax with INTO also works
  pass_str: |
    MERGE INTO target_table AS t
    USING source_table AS s
    ON t.id = s.id
    WHEN MATCHED THEN UPDATE SET t.name = s.name;

merge_complex:
  # Test complex MERGE with multiple clauses
  pass_str: |
    MERGE Sales.SalesOrderDetail AS SOD
    USING (
        SELECT ProductID, SUM(OrderQty) AS OrderQty
        FROM Sales.SalesOrderDetailHistory
        GROUP BY ProductID
    ) AS SOH
    ON SOD.ProductID = SOH.ProductID
    WHEN MATCHED AND SOD.OrderQty < SOH.OrderQty
        THEN UPDATE SET SOD.OrderQty = SOH.OrderQty
    WHEN NOT MATCHED BY TARGET
        THEN INSERT (ProductID, OrderQty) VALUES (SOH.ProductID, SOH.OrderQty)
    WHEN NOT MATCHED BY SOURCE
        THEN DELETE;

merge_with_output:
  # Test MERGE with OUTPUT clause
  pass_str: |
    MERGE target AS t
    USING source AS s
    ON t.id = s.id
    WHEN MATCHED THEN UPDATE SET t.value = s.value
    OUTPUT $action, inserted.*, deleted.*;

merge_with_hints:
  # Test MERGE with table hints
  pass_str: |
    MERGE target WITH (HOLDLOCK) AS t
    USING source AS s
    ON t.id = s.id
    WHEN MATCHED THEN UPDATE SET t.value = s.value;